﻿@model LMS_.tblBook

@{
    ViewBag.Title = "Add New Book";
}

<div class="container mt-4">
    <h2>Add New Book</h2>
    @using (Html.BeginForm("Create", "Book", FormMethod.Post))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title, null, new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryType, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.CategoryType, (SelectList)ViewBag.Categories,
                "Select a category", new { @class = "form-control", id = "CategoryType" })
            @Html.ValidationMessageFor(model => model.CategoryType, null, new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorName, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.AuthorName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AuthorName, null, new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicationName, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.PublicationName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PublicationName, null, new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, new { @class = "control-label" })
            @Html.TextBoxFor(model => model.ISBN, new { @class = "form-control", id = "isbnInput" })
            @Html.ValidationMessageFor(model => model.ISBN, null, new { @class = "text-danger" })
        </div>
        <button type="submit" class="btn btn-primary">Save Book</button>

        <script>
            $(document).ready(function () {
                // ISBN validation format (978-92-95055-02-5)
                $("#isbnInput").on("blur", function () {
                    var isbn = $(this).val();
                    var regex = /^(\d{3})-(\d{2})-(\d{5})-(\d{2})-(\d{1})$/;

                    if (!regex.test(isbn)) {
                        alert("Invalid ISBN format! Example: 978-92-95055-02-5");
                        $(this).focus(); // Keep the focus on ISBN input
                    }
                });

                // Conditional ISBN validation based on Category selection
                $("#CategoryType").on("change", function () {
                    var category = $(this).val();
                    var isbn = $("#isbnInput").val();

                    // If category is 'Horror', ISBN should start with 978
                    if (category === "Horror" && !isbn.startsWith("978")) {
                        alert("ISBN for Horror category must start with 978.");
                        $("#isbnInput").focus(); // Focus back on ISBN input if the condition fails
                    }
                });
        </script>
    }
</div>